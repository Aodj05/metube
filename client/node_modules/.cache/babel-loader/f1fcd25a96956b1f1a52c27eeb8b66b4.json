{"ast":null,"code":"import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport userReducer from \"./userSlice.js\";\nimport videoReducer from \"./videoSlice.js\";\nimport { persistStore, persistReducer, FLUSH, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  video: videoReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","combineReducers","getDefaultMiddleware","userReducer","videoReducer","persistStore","persistReducer","FLUSH","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","persistConfig","key","version","rootReducer","user","video","persistedReducer","store","reducer","middleware","serializableCheck","ignoreActions","REHYDRATE","persistor"],"sources":["F:/TOP/metube/client/src/redux/store.js"],"sourcesContent":["import { configureStore, combineReducers, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userSlice.js\";\r\nimport videoReducer from \"./videoSlice.js\";\r\nimport {\r\n    persistStore,\r\n    persistReducer,\r\n    FLUSH,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    version: 1,\r\n    storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({user: userReducer, video: videoReducer});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: (getDefaultMiddleware) =>\r\n        getDefaultMiddleware({\r\n            serializableCheck: {\r\n                ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n            },\r\n        }),\r\n});\r\n\r\nexport const persistor = persistStore(store);"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,EAA0CC,oBAA1C,QAAsE,kBAAtE;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,SACIC,YADJ,EAEIC,cAFJ,EAGIC,KAHJ,EAIIC,KAJJ,EAKIC,OALJ,EAMIC,KANJ,EAOIC,QAPJ,QAQO,eARP;AASA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,MAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MADa;EAElBC,OAAO,EAAE,CAFS;EAGlBJ;AAHkB,CAAtB;AAMA,MAAMK,WAAW,GAAGhB,eAAe,CAAC;EAACiB,IAAI,EAAEf,WAAP;EAAoBgB,KAAK,EAAEf;AAA3B,CAAD,CAAnC;AAEA,MAAMgB,gBAAgB,GAAGd,cAAc,CAACQ,aAAD,EAAgBG,WAAhB,CAAvC;AAEA,OAAO,MAAMI,KAAK,GAAGrB,cAAc,CAAC;EAChCsB,OAAO,EAAEF,gBADuB;EAEhCG,UAAU,EAAGrB,oBAAD,IACRA,oBAAoB,CAAC;IACjBsB,iBAAiB,EAAE;MACfC,aAAa,EAAE,CAAClB,KAAD,EAAQmB,SAAR,EAAmBlB,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADA;EADF,CAAD;AAHQ,CAAD,CAA5B;AAUP,OAAO,MAAMgB,SAAS,GAAGtB,YAAY,CAACgB,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}